{"ast":null,"code":"var _jsxFileName = \"D:\\\\college\\\\HMS\\\\New folder\\\\hospital\\\\frontend\\\\src\\\\js\\\\Pages\\\\doc-select\\\\doc-select.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { HealmeLogo } from \"../../../constants/constants\";\nimport { DocPic } from \"../../../constants/constants\";\nimport './_doc-select.css';\nimport Cookies from \"js-cookie\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Doc_Select = () => {\n  _s();\n  const handleDoctorButtonClick = () => {\n    Cookies.set('docselect', 'admin');\n    window.location.href = '/select-timing'; // Navigate to the desired site\n  };\n\n  // Define the state variable and the function to update it\n\n  const [data, setdata] = useState([\n  // Initialize data state with an array\n  {\n    name: 'err'\n  }]);\n  const detail = {\n    \"usr\": Cookies.get('doctype')\n  };\n\n  /* if(data[0].name==='err'){\r\n       alert(\"Sorry, no doc avalable\");\r\n   }*/\n\n  axios.post('/confirmappointment', detail).then(response => {\n    setData(response.data);\n  }).catch(error => {});\n  useEffect(() => {\n    // Fetch data from your API or source and update the state\n    const fetchData = async () => {\n      try {\n        const response = await axios.post('/confirmappointment', detail);\n        setData(response.data); // Assuming that the response contains an array of data\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData(); // Call the fetch data function when the component mounts\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"logo-img\",\n          src: HealmeLogo,\n          alt: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"listing \", Cookies.get('doctype')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body-container\",\n      id: \"list\",\n      children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"doctor-confirm-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"doc-photo\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"doc\",\n            src: DocPic,\n            alt: \"Pic of the doctor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"appointment-description\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Consultant - Dental Surgery BDS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"doctor-btn\",\n          children: \"Book An Appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(Doc_Select, \"/LgNn+xpb2eNapwaobawkdw1apk=\");\n_c = Doc_Select;\nexport default Doc_Select;\nvar _c;\n$RefreshReg$(_c, \"Doc_Select\");","map":{"version":3,"names":["React","useState","useEffect","HealmeLogo","DocPic","Cookies","axios","jsxDEV","_jsxDEV","Doc_Select","_s","handleDoctorButtonClick","set","window","location","href","data","setdata","name","detail","get","post","then","response","setData","catch","error","fetchData","console","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","id","map","item","index","type","_c","$RefreshReg$"],"sources":["D:/college/HMS/New folder/hospital/frontend/src/js/Pages/doc-select/doc-select.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { HealmeLogo } from \"../../../constants/constants\";\r\nimport { DocPic } from \"../../../constants/constants\";\r\nimport './_doc-select.css';\r\nimport Cookies from \"js-cookie\";\r\nimport ReactDOM from 'react-dom';\r\nimport axios from \"axios\";\r\n\r\nconst Doc_Select: React.FC = () => {\r\n    const handleDoctorButtonClick = () => {\r\n        Cookies.set('docselect', 'admin');\r\n        window.location.href = '/select-timing'; // Navigate to the desired site\r\n    };\r\n\r\n    // Define the state variable and the function to update it\r\n   \r\n    const [data, setdata] = useState([ // Initialize data state with an array\r\n    { name:'err'},\r\n  ]);\r\n\r\n  const detail = {\r\n    \"usr\": Cookies.get('doctype')\r\n    \r\n  };\r\n  \r\n   \r\n   /* if(data[0].name==='err'){\r\n        alert(\"Sorry, no doc avalable\");\r\n    }*/\r\n\r\n    axios.post('/confirmappointment', detail)\r\n.then((response) => {\r\n    setData(response.data);\r\n})\r\n.catch((error) => {\r\n   \r\n});\r\n    \r\nuseEffect(() => {\r\n    // Fetch data from your API or source and update the state\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.post('/confirmappointment', detail);\r\n        setData(response.data); // Assuming that the response contains an array of data\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n  \r\n    fetchData(); // Call the fetch data function when the component mounts\r\n  }, []); \r\n\r\n    return (\r\n        <div className=\"home-page-container\">\r\n            <div className=\"header-container\">\r\n                <div className=\"logo-container\">\r\n                    <img className=\"logo-img\" src={HealmeLogo} alt=\"Logo\" />\r\n                </div>\r\n            </div>\r\n            <div>\r\n                listing {Cookies.get('doctype')}\r\n            </div>\r\n            <div className=\"body-container\" id='list'>\r\n                {data.map((item, index) => (\r\n                <div className=\"doctor-confirm-panel\" key={index}>\r\n                        <div className=\"doc-photo\">\r\n                            <img className=\"doc\" src={DocPic} alt=\"Pic of the doctor\" />\r\n                        </div>\r\n                        <div className=\"appointment-description\">\r\n                            <div>\r\n                                {item.name}\r\n                            </div>\r\n                            <div>\r\n                                Consultant - Dental Surgery BDS\r\n                            </div>\r\n                        </div>\r\n                        <button type=\"button\" className=\"doctor-btn\" >\r\n                            Book An Appointment\r\n                        </button>\r\n                </div>\r\n                ))}\r\n\r\n\r\n            </div>\r\n           \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Doc_Select;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,8BAA8B;AACzD,SAASC,MAAM,QAAQ,8BAA8B;AACrD,OAAO,mBAAmB;AAC1B,OAAOC,OAAO,MAAM,WAAW;AAE/B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAMC,uBAAuB,GAAGA,CAAA,KAAM;IAClCN,OAAO,CAACO,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC;IACjCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,gBAAgB,CAAC,CAAC;EAC7C,CAAC;;EAED;;EAEA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC;EAAE;EACnC;IAAEiB,IAAI,EAAC;EAAK,CAAC,CACd,CAAC;EAEF,MAAMC,MAAM,GAAG;IACb,KAAK,EAAEd,OAAO,CAACe,GAAG,CAAC,SAAS;EAE9B,CAAC;;EAGA;AACH;AACA;;EAEId,KAAK,CAACe,IAAI,CAAC,qBAAqB,EAAEF,MAAM,CAAC,CAC5CG,IAAI,CAAEC,QAAQ,IAAK;IAChBC,OAAO,CAACD,QAAQ,CAACP,IAAI,CAAC;EAC1B,CAAC,CAAC,CACDS,KAAK,CAAEC,KAAK,IAAK,CAElB,CAAC,CAAC;EAEFxB,SAAS,CAAC,MAAM;IACZ;IACA,MAAMyB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMJ,QAAQ,GAAG,MAAMjB,KAAK,CAACe,IAAI,CAAC,qBAAqB,EAAEF,MAAM,CAAC;QAChEK,OAAO,CAACD,QAAQ,CAACP,IAAI,CAAC,CAAC,CAAC;MAC1B,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdE,OAAO,CAACF,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDC,SAAS,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEJ,oBACInB,OAAA;IAAKqB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAChCtB,OAAA;MAAKqB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC7BtB,OAAA;QAAKqB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,eAC3BtB,OAAA;UAAKqB,SAAS,EAAC,UAAU;UAACE,GAAG,EAAE5B,UAAW;UAAC6B,GAAG,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACN5B,OAAA;MAAAsB,QAAA,GAAK,UACO,EAACzB,OAAO,CAACe,GAAG,CAAC,SAAS,CAAC;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACN5B,OAAA;MAAKqB,SAAS,EAAC,gBAAgB;MAACQ,EAAE,EAAC,MAAM;MAAAP,QAAA,EACpCd,IAAI,CAACsB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACtBhC,OAAA;QAAKqB,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBAC7BtB,OAAA;UAAKqB,SAAS,EAAC,WAAW;UAAAC,QAAA,eACtBtB,OAAA;YAAKqB,SAAS,EAAC,KAAK;YAACE,GAAG,EAAE3B,MAAO;YAAC4B,GAAG,EAAC;UAAmB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3D,CAAC,eACN5B,OAAA;UAAKqB,SAAS,EAAC,yBAAyB;UAAAC,QAAA,gBACpCtB,OAAA;YAAAsB,QAAA,EACKS,IAAI,CAACrB;UAAI;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,eACN5B,OAAA;YAAAsB,QAAA,EAAK;UAEL;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACN5B,OAAA;UAAQiC,IAAI,EAAC,QAAQ;UAACZ,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAE;QAE9C;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAd0BI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAe3C,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEd,CAAC;AAAA1B,EAAA,CA/EKD,UAAoB;AAAAiC,EAAA,GAApBjC,UAAoB;AAiF1B,eAAeA,UAAU;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}