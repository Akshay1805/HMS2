{"ast":null,"code":"var _jsxFileName = \"D:\\\\college\\\\HMS\\\\New folder\\\\hospital\\\\frontend\\\\src\\\\js\\\\Pages\\\\tem\\\\tem.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./_tem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [message, setMessage] = useState(\"\"); // State for the message\n\n  const handleFileChange = event => {\n    const file = event.target.files && event.target.files[0];\n    setSelectedFile(file);\n  };\n  const handleMessageChange = event => {\n    setMessage(event.target.value); // Update the message state\n  };\n\n  const handleFileUpload = () => {\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append(\"pdfFile\", selectedFile);\n\n      // Append the message to the FormData\n      formData.append(\"message\", message);\n      axios.post(\"http://your-backend-url/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(response => {\n        console.log(\"File uploaded successfully\", response.data);\n        // You can handle success here, e.g., show a success message to the user\n      }).catch(error => {\n        console.error(\"File upload failed\", error);\n        // Handle errors, e.g., show an error message to the user\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload a PDF file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"pdfFile\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"message\",\n        placeholder: \"Enter a message\",\n        value: message,\n        onChange: handleMessageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleFileUpload,\n        children: \"Upload PDF with Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Test, \"CA3RLLryy1efd4D9OxGay4ICAGA=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Test","_s","selectedFile","setSelectedFile","message","setMessage","handleFileChange","event","file","target","files","handleMessageChange","value","handleFileUpload","formData","FormData","append","post","headers","then","response","console","log","data","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","encType","type","name","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/college/HMS/New folder/hospital/frontend/src/js/Pages/tem/tem.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./_tem.css\";\r\n\r\nconst Test = () => {\r\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\r\n  const [message, setMessage] = useState(\"\"); // State for the message\r\n\r\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files && event.target.files[0];\r\n    setSelectedFile(file);\r\n  };\r\n\r\n  const handleMessageChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setMessage(event.target.value); // Update the message state\r\n  };\r\n\r\n  const handleFileUpload = () => {\r\n    if (selectedFile) {\r\n      const formData = new FormData();\r\n      formData.append(\"pdfFile\", selectedFile);\r\n\r\n      // Append the message to the FormData\r\n      formData.append(\"message\", message);\r\n\r\n      axios\r\n        .post(\"http://your-backend-url/upload\", formData, {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        })\r\n        .then((response) => {\r\n          console.log(\"File uploaded successfully\", response.data);\r\n          // You can handle success here, e.g., show a success message to the user\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"File upload failed\", error);\r\n          // Handle errors, e.g., show an error message to the user\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Upload a PDF file</h1>\r\n      <form encType=\"multipart/form-data\">\r\n        <input\r\n          type=\"file\"\r\n          name=\"pdfFile\"\r\n          onChange={handleFileChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"message\"\r\n          placeholder=\"Enter a message\"\r\n          value={message}\r\n          onChange={handleMessageChange}\r\n        />\r\n        <button type=\"button\" onClick={handleFileUpload}>\r\n          Upload PDF with Message\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAc,IAAI,CAAC;EACnE,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE5C,MAAMU,gBAAgB,GAAIC,KAA0C,IAAK;IACvE,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,IAAIH,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACxDP,eAAe,CAACK,IAAI,CAAC;EACvB,CAAC;EAED,MAAMG,mBAAmB,GAAIJ,KAA0C,IAAK;IAC1EF,UAAU,CAACE,KAAK,CAACE,MAAM,CAACG,KAAK,CAAC,CAAC,CAAC;EAClC,CAAC;;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIX,YAAY,EAAE;MAChB,MAAMY,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEd,YAAY,CAAC;;MAExC;MACAY,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEZ,OAAO,CAAC;MAEnCP,KAAK,CACFoB,IAAI,CAAC,gCAAgC,EAAEH,QAAQ,EAAE;QAChDI,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC,CACDC,IAAI,CAAEC,QAAQ,IAAK;QAClBC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,QAAQ,CAACG,IAAI,CAAC;QACxD;MACF,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChBJ,OAAO,CAACI,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC1C;MACF,CAAC,CAAC;IACN;EACF,CAAC;;EAED,oBACE1B,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAA2B,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1B/B,OAAA;MAAMgC,OAAO,EAAC,qBAAqB;MAAAL,QAAA,gBACjC3B,OAAA;QACEiC,IAAI,EAAC,MAAM;QACXC,IAAI,EAAC,SAAS;QACdC,QAAQ,EAAE5B;MAAiB;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACF/B,OAAA;QACEiC,IAAI,EAAC,MAAM;QACXC,IAAI,EAAC,SAAS;QACdE,WAAW,EAAC,iBAAiB;QAC7BvB,KAAK,EAAER,OAAQ;QACf8B,QAAQ,EAAEvB;MAAoB;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eACF/B,OAAA;QAAQiC,IAAI,EAAC,QAAQ;QAACI,OAAO,EAAEvB,gBAAiB;QAAAa,QAAA,EAAC;MAEjD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC7B,EAAA,CA5DID,IAAI;AAAAqC,EAAA,GAAJrC,IAAI;AA8DV,eAAeA,IAAI;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}