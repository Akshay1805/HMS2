{"ast":null,"code":"var _jsxFileName = \"D:\\\\college\\\\HMS\\\\New folder\\\\hospital\\\\frontend\\\\src\\\\js\\\\Pages\\\\tem\\\\tem.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./_tem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleFileUpload = () => {\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append(\"pdfFile\", selectedFile);\n      axios.post(\"http://your-backend-url/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(response => {\n        console.log(\"File uploaded successfully\", response.data);\n        // You can handle success here, e.g., show a success message to the user\n      }).catch(error => {\n        console.error(\"File upload failed\", error);\n        // Handle errors, e.g., show an error message to the user\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload a PDF file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"pdfFile\",\n        onChange: handleFileChange(eve)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleFileUpload,\n        children: \"Upload PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Test, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Test","_s","selectedFile","setSelectedFile","handleFileChange","event","target","files","handleFileUpload","formData","FormData","append","post","headers","then","response","console","log","data","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","encType","type","name","onChange","eve","onClick","_c","$RefreshReg$"],"sources":["D:/college/HMS/New folder/hospital/frontend/src/js/Pages/tem/tem.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./_tem.css\";\r\n\r\nconst Test = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  const handleFileChange = (event: { target: { files: React.SetStateAction<null>[]; }; }) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleFileUpload = () => {\r\n    if (selectedFile) {\r\n      const formData = new FormData();\r\n      formData.append(\"pdfFile\", selectedFile);\r\n\r\n      axios.post(\"http://your-backend-url/upload\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(\"File uploaded successfully\", response.data);\r\n        // You can handle success here, e.g., show a success message to the user\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"File upload failed\", error);\r\n        // Handle errors, e.g., show an error message to the user\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Upload a PDF file</h1>\r\n      <form encType=\"multipart/form-data\">\r\n        <input type=\"file\" name=\"pdfFile\" onChange={handleFileChange(eve)} />\r\n        <button type=\"button\" onClick={handleFileUpload}>Upload PDF</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMQ,gBAAgB,GAAIC,KAA4D,IAAK;IACzFF,eAAe,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIN,YAAY,EAAE;MAChB,MAAMO,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAET,YAAY,CAAC;MAExCL,KAAK,CAACe,IAAI,CAAC,gCAAgC,EAAEH,QAAQ,EAAE;QACrDI,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC,CACDC,IAAI,CAAEC,QAAQ,IAAK;QAClBC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,QAAQ,CAACG,IAAI,CAAC;QACxD;MACF,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChBJ,OAAO,CAACI,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC1C;MACF,CAAC,CAAC;IACJ;EACF,CAAC;;EAED,oBACErB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1B1B,OAAA;MAAM2B,OAAO,EAAC,qBAAqB;MAAAL,QAAA,gBACjCtB,OAAA;QAAO4B,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC,SAAS;QAACC,QAAQ,EAAEzB,gBAAgB,CAAC0B,GAAG;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrE1B,OAAA;QAAQ4B,IAAI,EAAC,QAAQ;QAACI,OAAO,EAAEvB,gBAAiB;QAAAa,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACxB,EAAA,CArCID,IAAI;AAAAgC,EAAA,GAAJhC,IAAI;AAuCV,eAAeA,IAAI;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}